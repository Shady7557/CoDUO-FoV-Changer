<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="FoVPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAA4QAAAH0CAYAAABl8+PTAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAABp0RVh0U29mdHdhcmUAUGFpbnQuTkVUIHYzLjUuMTFH80I3AAANPklEQVR4Xu3d
        ga3kNBQF0O2BDmiABqhgK6ADOqADWqAGSqAHWqAGWoC5AktRsJ+TTH4mwz9HemL/nzhOHFaau06cLwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        IHKHwLP0bPtmdE3aNV8GbzOEAAAAn5TABQAA8ElVgXDPrCQAAAAXS3DL7ZupzOjlVtoEueV7JyvVKz22
        7gMAAIAXqBYPyjOElTw/OGqfZ04BAAC4sbyuoxfoWmURmfVMX36erUSbdgAAANxY9QzgM7XlFSAAAAC8
        2GyWcG9ZXRQAAOBN5FnA6r2Ae8qtogAAAG8oM3tZDKYX9GaVQOk1EwAAAG/u66MSDhPystJoLwDm9+1V
        FV4vAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAMC5vnz5G5F7XbqKnZABAAAAAElFTkSuQmCC
</value>
  </data>
  <metadata name="Timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>